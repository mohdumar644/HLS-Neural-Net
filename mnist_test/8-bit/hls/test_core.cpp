#include <stdio.h>
//#include <opencv2/core/core.hpp>
#include <hls_opencv.h>
#include "core.h"
#include <time.h>
#include <unistd.h>
#include <sys/time.h>
#include <stdio.h>
#include <string>
#include <fstream>
#include <sstream>

long getMicrotime(){
	struct timeval currentTime;
	gettimeofday(&currentTime, NULL);
	return currentTime.tv_sec * (int)1e6 + currentTime.tv_usec;
}
#include <string>
#include <limits.h>
#include <unistd.h>

extern fixed_point_8_7 weights_conv2[51200];


int main()
{
#ifndef __SYNTHESIS__
	//	fixed_point *mem1 = new fixed_point[51200];
	wide_var *mem2 = new wide_var[1605632/8];
#else
	//	fixed_point mem1[51200];
	wide_var mem2[1605632/8];
#endif

	hls::stream<fixed_point_8_7> inStream;
	hls::stream<int_32_side_channel__> outStream;
	hls::stream<wide_var> weightStream;

	// load input into stream
	fixed_point_8_7 input_matrix[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4549,0.4902,0.67059,1,1,0.58824,0.36471,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.66275,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.8549,0.11765,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.66275,0.99216,0.99216,0.99216,0.83529,0.55686,0.6902,0.99216,0.99216,0.47843,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20392,0.98039,0.99216,0.82353,0.12549,0.047059,0,0.023529,0.80784,0.99216,0.54902,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.30196,0.98431,0.82353,0.098039,0,0,0,0.47843,0.97255,0.99216,0.2549,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12157,0.070588,0,0,0,0,0.81961,0.99216,0.99216,0.2549,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.45882,0.96863,0.99216,0.77647,0.039216,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29804,0.96863,0.99216,0.90588,0.24706,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.50196,0.99216,0.99216,0.56471,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.6902,0.96471,0.99216,0.62353,0.047059,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.098039,0.91765,0.99216,0.91373,0.13725,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.77647,0.99216,0.99216,0.55294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.30588,0.97255,0.99216,0.74118,0.047059,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07451,0.78431,0.99216,0.99216,0.55294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.52549,0.99216,0.99216,0.67843,0.047059,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.97255,0.99216,0.99216,0.098039,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.97255,0.99216,0.99216,0.16863,0.078431,0.078431,0.078431,0.078431,0.019608,0,0.019608,0.078431,0.078431,0.1451,0.58824,0.58824,0.58824,0.57647,0.039216,0,0,0,0,0,0,0,0,0,0.97255,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.65882,0.56078,0.65098,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.48235,0,0,0,0,0,0,0,0,0,0.68235,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.99216,0.97647,0.96863,0.96863,0.66275,0.45882,0.45882,0.22353,0,0,0,0,0,0,0,0,0,0,0.46275,0.48235,0.48235,0.48235,0.65098,0.99216,0.99216,0.99216,0.60784,0.48235,0.48235,0.16078,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
//	fixed_point_8_7 input_matrix[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19608,0.87843,0,0,0,0,0,0,0,0.27451,0.11373,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.47451,0.90588,0,0,0,0,0,0,0,0.58039,0.65882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015686,0.76471,0.90588,0,0,0,0,0,0,0,0.37647,0.82353,0.043137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27059,0.98824,0.52549,0,0,0,0,0,0,0,0.44706,0.98824,0.082353,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.17647,0.92549,0.85098,0.047059,0,0,0,0,0,0,0,0.75294,0.98824,0.082353,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.65882,0.96863,0.20784,0,0,0,0,0,0,0,0.070588,1,0.99216,0.082353,0,0,0,0,0,0,0,0,0,0,0,0,0,0.32941,0.94902,0.82745,0,0,0,0,0,0,0,0,0.55294,0.99216,0.74118,0.019608,0,0,0,0,0,0,0,0,0,0,0,0,0,0.66275,0.98824,0.41569,0,0,0,0,0,0,0,0.12549,0.9098,0.98039,0.25882,0,0,0,0,0,0,0,0,0,0,0,0,0,0.058824,0.88235,0.98824,0,0,0,0,0,0,0,0,0.52549,0.98824,0.82745,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.086275,0.98824,0.64314,0,0,0,0,0,0,0,0,0.66275,0.98824,0.6549,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.035294,0.8,0.81961,0.070588,0,0,0,0,0,0,0.086275,0.99216,0.99216,0.41961,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.66275,0.98824,0.78039,0.33333,0.33333,0.33333,0.33333,0.50588,0.64314,0.76471,0.98824,0.98824,0.41569,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16078,0.66667,0.96078,0.98824,0.98824,0.98824,0.98824,0.9098,0.90588,0.98431,0.98824,0.98824,0.035294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19216,0.32941,0.32941,0.32941,0.32941,0,0,0.63137,0.98824,0.98824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.49804,0.98824,0.98824,0.17647,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.50196,0.99216,0.99216,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.49804,0.98824,0.98824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.52941,0.98824,0.95686,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.9098,0.92549,0.43529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.70196,0.25882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
//	fixed_point_8_7 input_matrix[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.039216,0.11373,0.015686,0.40784,0.89804,0.99216,0.50588,0.039216,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.33333,0.98824,0.70196,0.98824,0.98824,0.98824,0.99216,0.47843,0.05098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.48235,0.98824,0.99216,0.98824,0.58039,0.21961,0.99216,0.98824,0.56078,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0.96471,0.98824,0.99216,0.4,0.023529,0,0.6,0.98824,0.65882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.66667,0.99216,0.99216,1,0.32941,0,0,0.05098,0.81176,0.99216,0.35686,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.66275,0.98824,0.98824,0.96863,0.2549,0,0,0,0.66275,0.98824,0.84314,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.66275,0.98824,0.98824,0.39216,0,0,0,0,0.32157,0.98824,0.98824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10196,0.95294,0.98824,0.98824,0,0,0,0,0,0.22353,0.98824,0.98824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16078,0.99216,0.99216,0.99216,0,0,0,0,0,0.22353,0.99216,0.99216,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.55294,0.98824,0.98824,0.98824,0,0,0,0,0,0.22353,0.98824,0.98824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.89804,0.98824,0.87843,0.65882,0,0,0,0,0,0.22353,0.98824,0.98824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.99216,0.98824,0.65882,0,0,0,0,0,0,0.22353,0.98824,0.98824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.99608,0.99216,0.65882,0,0,0,0,0,0,0.47059,0.99216,0.7451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.99216,0.98824,0.36471,0,0,0,0,0,0,0.66275,0.98824,0.2549,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.99216,0.98824,0.21961,0,0,0,0,0,0.039216,0.77255,0.98824,0.1098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.99216,0.98824,0.61176,0,0,0,0,0,0.70196,0.98824,0.69412,0.011765,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.70196,0.99216,0.69804,0.062745,0,0.07451,0.25882,0.74902,0.99608,0.81961,0.098039,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.086275,0.91765,0.98824,0.84314,0.66275,0.88235,0.98824,0.98824,0.81961,0.1098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.51373,0.98824,0.98824,0.99216,0.98824,0.98824,0.83922,0.098039,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.027451,0.2549,0.94118,0.99216,0.69412,0.40392,0.058824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
//	fixed_point_8_7 input_matrix[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21176,0.83529,0.91765,0.72549,0.17255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12549,0.88627,0.89804,0.22745,0.63922,0.070588,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.53725,0.99608,0.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.85882,0.65882,0.0078431,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.40784,0.96078,0.13725,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.18824,0.99216,0.67843,0.047059,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.24706,0.82745,0.78431,0.12549,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.42353,0.98431,0.32941,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.035294,0.76863,0.70196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4549,0.97647,0.21569,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.86275,0.8549,0,0,0.0039216,0.2549,0.47059,0.22353,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.18431,0.98431,0.60784,0,0.12941,0.66275,0.99608,0.99608,0.91373,0.070588,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.52157,0.99608,0.32157,0.031373,0.7098,0.83922,0.48235,0.94902,0.7098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.28235,0.99608,0.52941,0.88627,0.9098,0.098039,0.20392,0.99216,0.60392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.84314,0.99608,0.82353,0.1451,0.023529,0.87843,0.90588,0.039216,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69804,0.99608,0.91765,0.58039,0.82353,0.88235,0.31373,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21961,0.94118,0.51765,0.77255,0.87059,0.53725,0.082353,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015686,0.76471,0.51373,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.22353,1,0.14902,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015686,0.52941,0.45098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	for(int i =0; i< 784;i++)
		inStream << input_matrix[i];

	wide_var tmp;
	for(int i=0;i<51200;i++)
	{
		short high,low;
		high = (i%8) * 8 + 7;
		low = (i%8) * 8;

		tmp.range(high,low) =  weights_conv2[i]  * fixed_factor;

		if (i%8==7)
			weightStream << tmp;
	}

	// load weights of FC1 into DRAM
	std::ifstream t("../../../../wf1.h");
	std::stringstream buffer;
	buffer << t.rdbuf();
	std::string token;
	int k=0;
	while (std::getline(buffer, token, ','))
	{
		fixed_point_8_7 p = ::atof(token.c_str());

		short high, low;
		high = (k%8) * 8 + 7;
		low = (k%8) * 8;
		mem2[k/8].range(high,low) = p * fixed_factor;
		k++;
	}

	for(int i=0;i<1605632/8;i++)
	{
		weightStream << mem2[i];
	}

	printf("Calling TOP function %d\n",weightStream.size());
	long first_time = getMicrotime();
	deepMNIST(inStream,outStream,weightStream); // IP CORE
	long s_time = getMicrotime();
	printf("Core function ended TIME: %f\n",(float)(s_time-first_time)/1000000);
	printf("OUT_SIZE === %d\n",outStream.size());

	for (int i = 0; i < 10; i++)
	{
		int_32_side_channel__ op = outStream.read();
		printf("OUT i=%d\t%f\t%d\n",i,op.data.to_double()/1048576,(int)op.last);
	}
	return 0;
}

